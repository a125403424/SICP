Recursive procedure
(the procedure would repeatedly call itself until it finally approached the final value)

(define (f n)
  (if (< n 3)
      n
      (+ (f (- n 1)) (* 2 (f (- n 2))) (* 3 (f (- n 3))))))

Iterative procedure
(an iterator function was repeatedly executed under certain conditions)

(define (f n)
  (define (f-iter a b c n)
    (if (= n 0)
        a
        (f-iter b c (+ c (* 2 b) (* 3 a)) (- n 1))))
  (f-iter 0 1 2 n))
